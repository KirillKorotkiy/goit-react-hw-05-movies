{"version":3,"file":"static/js/52.e79a44c1.chunk.js","mappings":"mVAEAA,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAM,mCACCC,EAAU,kCAEVC,EAAQ,mCAAG,oGACCH,IAAAA,IAAA,sCAAyCC,IAD1C,cAChBG,EADgB,yBAEfA,EAASC,KAAKC,SAFC,2CAAH,qDAKRC,EAAc,mCAAG,WAAMC,GAAN,uFACLR,IAAAA,IAAA,iBAAoBQ,EAApB,oBAAkCP,IAD7B,cACtBG,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKdI,EAAa,mCAAG,WAAMD,GAAN,uFACLR,IAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,IADrC,cACrBS,EADqB,yBAEpBA,EAAQL,KAAKM,MAFO,2CAAH,sDAKbC,EAAgB,mCAAG,WAAMJ,GAAN,uFACRR,IAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,EAA1C,YADQ,cACxBS,EADwB,yBAEvBA,EAAQL,KAAKC,SAFU,2CAAH,sDAKhBO,EAAgB,mCAAG,WAAMC,GAAN,uFACRd,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAgDa,IADxC,cACxBJ,EADwB,yBAEvBA,EAAQL,KAAKC,SAFU,2CAAH,uD,sICxBhBS,EAAaC,EAAAA,GAAAA,GAAH,0FAKVC,EAASD,EAAAA,GAAAA,GAAH,wEAKNE,EAAYF,EAAAA,GAAAA,EAAH,oD,SCVTG,EAAU,WACrB,IAAMC,ECAsB,WAC1B,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOH,EAAP,KAAgBI,EAAhB,KASJ,OANIC,EAAAA,EAAAA,YAAU,YACNb,EAAAA,EAAAA,IAAiBS,GAASK,KAAKF,KAGhC,CAACH,IAEDD,GAAoB,GDXTO,GAChB,OACE,iCACIP,IAAW,wCACO,IAAnBA,EAAQQ,SAAgB,SAACV,EAAD,sCACxBE,IACC,wBACGA,EAAQS,KAAI,gBAAGrB,EAAH,EAAGA,GAAIsB,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACX,UAAChB,EAAD,YACE,SAACE,EAAD,UAASc,KACT,uBAAID,MAFWtB,YEF7B,EARoB,WAClB,OACE,+BACE,SAACW,EAAD","sources":["components/Services/FetchAPI.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","hooks/useFetchReviews.jsx","views/ReviewsView.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst key = 'fbc76dc8ab4d0da433d9be06ec2fd63f';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport const fetchAPI = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${key}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${key}`);\n  return response.data;\n};\n\nexport const fetchCastList = async id => {\n  const respose = await axios.get(`/movie/${id}/credits?api_key=${key}`);\n  return respose.data.cast;\n};\n\nexport const fetchReviewsById = async id => {\n  const respose = await axios.get(`/movie/${id}/reviews?api_key=${key}&page=1`);\n  return respose.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const respose = await axios.get(`/search/movie?api_key=${key}&query=${query}`);\n  return respose.data.results;\n};\n","import styled from \"styled-components\";\n\n\nexport const ReviewItem = styled.li`\n    margin-bottom: 15px;\n    border-bottom: 2px dashed #3b4157;\n`\n\nexport const Author = styled.h4`\n    margin-bottom: 10px;\n    font-size: 20px;\n`\n\nexport const NoReviews = styled.p`\n    font-size: 26px;\n    \n`","import { useFetchReviews } from 'hooks/useFetchReviews';\nimport { ReviewItem, Author,NoReviews } from './Reviews.styled';\n\nexport const Reviews = () => {\n  const reviews = useFetchReviews();\n  return (\n    <>\n      {!reviews && <h2>Loading ...</h2>}\n      {reviews.length === 0 && <NoReviews>There is no reviews yet</NoReviews>}\n      {reviews && (\n        <ul>\n          {reviews.map(({ id, content, author }) => (\n            <ReviewItem key={id}>\n              <Author>{author}</Author>\n              <p>{content}</p>\n            </ReviewItem>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchReviewsById } from \"components/Services/FetchAPI\";\n\nexport const useFetchReviews =()=>{\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState(null);\n    \n  \n    useEffect(() => {\n        fetchReviewsById(movieId).then(setReviews);\n     \n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [movieId]);\n\nreturn reviews ? reviews : ''\n}","import { Reviews } from 'components/Reviews/Reviews';\n\nconst ReviewsView = () => {\n  return (\n    <>\n      <Reviews />\n    </>\n  );\n};\n\nexport default ReviewsView;\n"],"names":["axios","key","IMG_URL","fetchAPI","response","data","results","fetchMovieById","id","fetchCastList","respose","cast","fetchReviewsById","fetchSearchMovie","query","ReviewItem","styled","Author","NoReviews","Reviews","reviews","movieId","useParams","useState","setReviews","useEffect","then","useFetchReviews","length","map","content","author"],"sourceRoot":""}