{"version":3,"file":"static/js/879.376ddb3b.chunk.js","mappings":"oVAEAA,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAM,mCACCC,EAAU,kCAEVC,EAAQ,mCAAG,oGACCH,IAAAA,IAAA,sCAAyCC,IAD1C,cAChBG,EADgB,yBAEfA,EAASC,KAAKC,SAFC,2CAAH,qDAKRC,EAAc,mCAAG,WAAMC,GAAN,uFACLR,IAAAA,IAAA,iBAAoBQ,EAApB,oBAAkCP,IAD7B,cACtBG,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKdI,EAAa,mCAAG,WAAMD,GAAN,uFACLR,IAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,IADrC,cACrBS,EADqB,yBAEpBA,EAAQL,KAAKM,MAFO,2CAAH,sDAKbC,EAAgB,mCAAG,WAAMJ,GAAN,uFACRR,IAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,EAA1C,YADQ,cACxBS,EADwB,yBAEvBA,EAAQL,KAAKC,SAFU,2CAAH,sDAKhBO,EAAgB,mCAAG,WAAMC,GAAN,uFACRd,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAgDa,IADxC,cACxBJ,EADwB,yBAEvBA,EAAQL,KAAKC,SAFU,2CAAH,uD,0ICxBhBS,EAAWC,EAAAA,GAAAA,IAAH,+DAKRC,EAAOD,EAAAA,GAAAA,GAAH,iGAKJE,EAAOF,EAAAA,GAAAA,EAAH,wBAGJG,EAAYH,EAAAA,GAAAA,EAAH,6C,SCbTI,EAAW,SAAC,GAAc,IAAZT,EAAW,EAAXA,KACzB,OACE,8BACGA,EAAKU,KAAI,gBAAEb,EAAF,EAAEA,GAAIc,EAAN,EAAMA,aAAcC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,UAA1B,OACR,UAACP,EAAD,YACE,SAACF,EAAD,CAAUU,IAAMH,EAAY,UAAOpB,EAAAA,IAAP,OAAiBoB,GAAjB,sCAAwEI,IAAKF,KACzG,SAACN,EAAD,UAAOK,KACP,SAACJ,EAAD,UAAYK,MAHHhB,MAKVmB,MAAM,EAAG,OCRLC,EAAaZ,EAAAA,GAAAA,GAAH,sGCAVa,EAAW,WACtB,IAAMlB,ECDyB,WAC/B,IAAQmB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOrB,EAAP,KAAasB,EAAb,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACRzB,EAAAA,EAAAA,IAAcqB,GAASK,KAAKF,KAG3B,CAACH,IACGnB,EDRMyB,GACb,OACE,8BACGzB,IACC,SAACiB,EAAD,WACE,SAACR,EAAD,CAAUT,KAAMA,SEA1B,EARqB,WACnB,OACE,+BACE,SAACkB,EAAD","sources":["components/Services/FetchAPI.jsx","components/CastCard/CastCard.styled.jsx","components/CastCard/CastCard.jsx","components/CastList/CastList.styled.jsx","components/CastList/CastList.jsx","hooks/useFetchCastMovie.jsx","views/CastListView.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst key = 'fbc76dc8ab4d0da433d9be06ec2fd63f';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport const fetchAPI = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${key}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${key}`);\n  return response.data;\n};\n\nexport const fetchCastList = async id => {\n  const respose = await axios.get(`/movie/${id}/credits?api_key=${key}`);\n  return respose.data.cast;\n};\n\nexport const fetchReviewsById = async id => {\n  const respose = await axios.get(`/movie/${id}/reviews?api_key=${key}&page=1`);\n  return respose.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const respose = await axios.get(`/search/movie?api_key=${key}&query=${query}`);\n  return respose.data.results;\n};\n","import styled from \"styled-components\";\n\n\nexport const ItemLImg = styled.img`\n    width: 200px;\n    height: 300px;\n`\n\nexport const Item = styled.li`\n    text-align: center;\n    margin-bottom: 15px;\n    font-size: 18px;\n`\nexport const Name = styled.p`\n`\n\nexport const Character = styled.p`\nmax-width: 200px;\n\n`","import { ItemLImg, Item, Name, Character } from \"./CastCard.styled\";\nimport { IMG_URL } from \"components/Services/FetchAPI\";\n\nexport const CastCard = ({ cast }) => {\n  return (\n    <>\n      {cast.map(({id, profile_path, name, character }) => (\n        <Item key={id}>\n          <ItemLImg src={ profile_path ?  `${IMG_URL}${profile_path}`: `https://i.stack.imgur.com/dr5qp.jpg`} alt={character} />\n          <Name>{name}</Name>\n          <Character>{character}</Character>\n        </Item>\n      )).slice(0, 24)}\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\n\n\nexport const ActorsList = styled.ul`\n   display:flex ;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`\n\n\n\n","import { useFetchCastMovie } from 'hooks/useFetchCastMovie';\nimport { CastCard } from 'components/CastCard/CastCard';\nimport { ActorsList } from './CastList.styled';\n\nexport const CastList = () => {\n  const cast = useFetchCastMovie();\n  return (\n    <>\n      {cast && (\n        <ActorsList>\n          <CastCard cast={cast} />\n        </ActorsList>\n      )}\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { fetchCastList } from 'components/Services/FetchAPI';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchCastMovie = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchCastList(movieId).then(setCast);\n   \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId]);\n  return cast;\n};\n","import { CastList } from 'components/CastList/CastList';\n\nconst CastListView = () => {\n  return (\n    <>\n      <CastList />\n    </>\n  );\n};\n\nexport default CastListView;\n"],"names":["axios","key","IMG_URL","fetchAPI","response","data","results","fetchMovieById","id","fetchCastList","respose","cast","fetchReviewsById","fetchSearchMovie","query","ItemLImg","styled","Item","Name","Character","CastCard","map","profile_path","name","character","src","alt","slice","ActorsList","CastList","movieId","useParams","useState","setCast","useEffect","then","useFetchCastMovie"],"sourceRoot":""}