{"version":3,"file":"static/js/415.afffb1cc.chunk.js","mappings":"oVAEAA,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAM,mCACCC,EAAU,kCAEVC,EAAQ,mCAAG,oGACCH,IAAAA,IAAA,sCAAyCC,IAD1C,cAChBG,EADgB,yBAEfA,EAASC,KAAKC,SAFC,2CAAH,qDAKRC,EAAc,mCAAG,WAAMC,GAAN,uFACLR,IAAAA,IAAA,iBAAoBQ,EAApB,oBAAkCP,IAD7B,cACtBG,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKdI,EAAa,mCAAG,WAAMD,GAAN,uFACLR,IAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,IADrC,cACrBS,EADqB,yBAEpBA,EAAQL,KAAKM,MAFO,2CAAH,sDAKbC,EAAgB,mCAAG,WAAMJ,GAAN,uFACRR,IAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,EAA1C,YADQ,cACxBS,EADwB,yBAEvBA,EAAQL,KAAKC,SAFU,2CAAH,sDAKhBO,EAAgB,mCAAG,WAAMC,GAAN,uFACRd,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAgDa,IADxC,cACxBJ,EADwB,yBAEvBA,EAAQL,KAAKC,SAFU,2CAAH,uD,iHCzBhBS,EAAUC,EAAAA,GAAAA,IAAH,iEAKPC,EAAWD,EAAAA,GAAAA,EAAH,8CAIRE,EAAmBF,EAAAA,GAAAA,IAAH,iFAIhBG,EAAkBH,EAAAA,GAAAA,IAAH,sEAIfI,EAASJ,EAAAA,GAAAA,IAAH,+DAKNK,EAAQL,EAAAA,GAAAA,GAAH,gDAGLM,EAAYN,EAAAA,GAAAA,EAAH,oEAITO,EAAgBP,EAAAA,GAAAA,EAAH,yFAKbQ,EAAgBR,EAAAA,GAAAA,OAAJ,4T,gDCjCZS,GAAWT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,iHAMRW,GAAcX,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,oFAMXY,EAAQZ,EAAAA,GAAAA,IAAH,uE,SCbLa,EAAc,WAEvB,OACI,UAACD,EAAD,YACA,SAACH,EAAD,CAAUK,GAAG,OAAb,mBACA,SAACH,EAAD,CAAcG,GAAG,UAAjB,yBCsCR,EA9BsB,WACpB,IAAMC,ECZoB,WAC5B,IAAOC,GAAUC,EAAAA,EAAAA,MAAVD,QACP,GAA2BE,EAAAA,EAAAA,UAAS,MAApC,eAAOH,EAAP,KAAcI,EAAd,KAQG,OANHC,EAAAA,EAAAA,YAAU,YACN7B,EAAAA,EAAAA,IAAeyB,GAASK,KAAKF,KAG9B,CAACH,IAEMD,EDEMO,GACRC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,8BACGT,IACC,iCACE,SAACP,EAAD,CAAciB,QANP,kBAAMF,GAAU,OAOvB,UAACrB,EAAD,YACE,SAACE,EAAD,CAAQsB,IAAG,UAAKxC,EAAAA,IAAL,OAAe6B,EAAMY,aAAgBC,IAAI,MACpD,UAACzB,EAAD,YACE,UAACE,EAAD,WACGU,EAAMc,MADT,KACkBd,EAAMe,aADxB,QAGA,SAACxB,EAAD,+BAA0ByB,KAAKC,MACR,GAArBjB,EAAMkB,cADR,SAGA,SAAC1B,EAAD,wBACA,UAACN,EAAD,eAAYc,EAAMmB,mBAGtB,SAACrB,EAAD,UEzBV,EAT2B,WACzB,OACE,UAACd,EAAD,YACE,SAAC,EAAD,KACE,SAAC,KAAD","sources":["components/Services/FetchAPI.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/CastReviews/CastReviews.styled.jsx","components/CastReviews/CastReviews.jsx","components/MovieDetails/MovieDetails.jsx","hooks/useFetchMovie.jsx","views/MoviesDetalsView.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst key = 'fbc76dc8ab4d0da433d9be06ec2fd63f';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport const fetchAPI = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${key}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${key}`);\n  return response.data;\n};\n\nexport const fetchCastList = async id => {\n  const respose = await axios.get(`/movie/${id}/credits?api_key=${key}`);\n  return respose.data.cast;\n};\n\nexport const fetchReviewsById = async id => {\n  const respose = await axios.get(`/movie/${id}/reviews?api_key=${key}&page=1`);\n  return respose.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const respose = await axios.get(`/search/movie?api_key=${key}&query=${query}`);\n  return respose.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  max-width: 1300px;\n  margin: 0 auto;\n`;\n\nexport const Overview = styled.p`\n    font-size: 22px;\n`\n\nexport const MovieDescription = styled.div`\n    display: flex;\n    justify-content: space-between;\n`\nexport const DescriptionInfo = styled.div`\n    padding-top: 20px;\n    flex-basis: 70%;\n`\nexport const Poster = styled.img`\n  margin-right: 50px;\n  width: 350px\n`\n\nexport const Title = styled.h1`\n  margin-bottom: 30px;\n`\nexport const UserScore = styled.p`\n  margin-bottom: 30px;\n  font-size: 24px;\n`\nexport const OverviewTitle = styled.p`\n  margin-bottom: 30px;\n  font-size: 20px;\n  font-weight: 700;\n`\nexport const GoBackButton =  styled.button`\n  margin-top: 80px;\n  height: 30px;\n  margin-bottom: 30px;\n  background-image: url('https://www.svgrepo.com/show/345453/arrow-go-back.svg');\n  background-repeat: no-repeat;\n  background-size: contain;\n  width: 50px;\n  border: none;\n  background-color: #ffffff;\n  cursor: pointer;\n  `;\n\n ","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nexport const LinkCast = styled(Link)`\n  line-height: 20px;\n  margin-right: 20px;\n  text-decoration: none;\n  color: #000000\n`\nexport const LinkReviews = styled(Link)`\ntext-decoration: none;\nline-height: 20px;\ncolor: #000000\n`\n\nexport const Links = styled.div`\n  margin-bottom: 20px;\n  font-size: 20px;\n \n`\n","import { Links, LinkCast, LinkReviews } from \"./CastReviews.styled\"\n\nexport const CastReviews = () =>{\n\n    return (\n        <Links>\n        <LinkCast to=\"cast\">Cast</LinkCast>\n        <LinkReviews  to='reviews' >Reviews</LinkReviews>\n        </Links>\n    )\n}","import {\n  MovieDescription,\n  DescriptionInfo,\n  Poster,\n  Title,\n  UserScore,\n  OverviewTitle,\n  GoBackButton,\n  Overview,\n} from './MovieDetails.styled';\nimport { useFetchMovie } from 'hooks/useFetchMovie';\nimport { IMG_URL } from 'components/Services/FetchAPI';\nimport { CastReviews } from 'components/CastReviews/CastReviews';\nimport { useNavigate } from 'react-router-dom';\n\nconst MoviesDetails = () => {\n  const movie = useFetchMovie();\n  const navigate = useNavigate();\n  const goBack = () => navigate(-1);\n\n  return (\n    <>\n      {movie && (\n        <>\n          <GoBackButton onClick={goBack}></GoBackButton>\n          <MovieDescription>\n            <Poster src={`${IMG_URL}${movie.poster_path}` } alt=\"\" />\n            <DescriptionInfo>\n              <Title>\n                {movie.title} ({movie.release_date})\n              </Title>\n              <UserScore>{`User Score ${Math.round(\n                movie.vote_average * 10\n              )}% `}</UserScore>\n              <OverviewTitle>Overview</OverviewTitle>\n              <Overview> {movie.overview}</Overview>\n            </DescriptionInfo>\n          </MovieDescription>\n          <CastReviews />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MoviesDetails;\n","import { useState, useEffect } from \"react\"\nimport {  fetchMovieById } from \"components/Services/FetchAPI\"\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchMovie =() =>{\nconst {movieId}= useParams()\nconst [movie, setMovies] = useState(null)\n\nuseEffect(()=>{\n    fetchMovieById(movieId).then(setMovies)\n   \n// eslint-disable-next-line react-hooks/exhaustive-deps\n}, [movieId])\n\n   return movie\n}","import MoviesDetails from 'components/MovieDetails/MovieDetails';\nimport { Outlet } from 'react-router-dom';\nimport { Wrapper } from 'components/MovieDetails/MovieDetails.styled';\n\n const MoviesDetailsView = () => {\n  return (\n    <Wrapper>\n      <MoviesDetails />\n        <Outlet />\n    </Wrapper>\n  );\n};\n\nexport default MoviesDetailsView"],"names":["axios","key","IMG_URL","fetchAPI","response","data","results","fetchMovieById","id","fetchCastList","respose","cast","fetchReviewsById","fetchSearchMovie","query","Wrapper","styled","Overview","MovieDescription","DescriptionInfo","Poster","Title","UserScore","OverviewTitle","GoBackButton","LinkCast","Link","LinkReviews","Links","CastReviews","to","movie","movieId","useParams","useState","setMovies","useEffect","then","useFetchMovie","navigate","useNavigate","onClick","src","poster_path","alt","title","release_date","Math","round","vote_average","overview"],"sourceRoot":""}